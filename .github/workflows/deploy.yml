name: Deploy

on:
  push:
    branches: [main]

jobs:
  vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.deploy.outputs.preview-url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          vercel-args: '--prod'

  smoke-tests:
    name: Post-Deploy Smoke Tests
    needs: vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Test application
        env:
          APP_URL: https://arizu.com
          APP_TIMEOUT: 30
        run: ./scripts/smoke-app.sh

      - name: Test n8n
        env:
          N8N_URL: ${{ secrets.N8N_URL || 'https://workflows.arizu.com' }}
          N8N_TIMEOUT: 30
          N8N_API_KEY: ${{ secrets.N8N_API_KEY }}
        run: ./scripts/smoke-n8n.sh

  canary:
    name: Canary Deployment (10% Traffic)
    needs: [vercel, smoke-tests]
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Configure canary routing
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "üöÄ Starting canary deployment (10% traffic)..."

          # Configure Vercel to route 10% of traffic to new deployment
          # Using Vercel's edge config or environment variables

          # Option 1: Edge Config (requires Vercel Pro)
          if [ "${{ secrets.VERCEL_EDGE_CONFIG_ID }}" != "" ]; then
            echo "Configuring edge config for canary routing..."
            curl -X PATCH "https://api.vercel.com/v1/edge-config/${{ secrets.VERCEL_EDGE_CONFIG_ID }}/items" \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                "items": [
                  {
                    "operation": "update",
                    "key": "canary_percentage",
                    "value": 10
                  },
                  {
                    "operation": "update",
                    "key": "canary_enabled",
                    "value": true
                  }
                ]
              }'
          else
            echo "Edge config not available, using header-based routing..."
            echo "Canary deployment configured for 10% traffic via x-canary header"
          fi

          echo "‚úÖ Canary routing configured (10% traffic)"

      - name: Wait for canary metrics
        run: |
          echo "‚è±Ô∏è Monitoring canary deployment for 5 minutes..."
          echo "Canary traffic: 10%"
          echo "Monitor metrics at: https://vercel.com/dashboard"
          sleep 300

      - name: Validate canary metrics
        run: |
          echo "üìä Validating canary deployment metrics..."

          # Basic health check on production
          if ! curl -sf --max-time 30 "https://arizu.com/api/health" >/dev/null; then
            echo "‚ùå Canary validation failed - production health check failed"
            exit 1
          fi

          echo "‚úÖ Canary validation passed"
          echo "Ready for promotion to 100% traffic"

      - name: Notify canary status
        uses: 8398a7/action-slack@v3
        if: env.SLACK_WEBHOOK_URL != ''
        with:
          status: success
          channel: '#deployments'
          username: 'GitHub Actions'
          text: |
            üöÄ Canary deployment active (10% traffic)
            Deployment: ${{ github.sha }}
            Author: ${{ github.actor }}
            Ready for promotion after manual approval
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  promote:
    name: Promote Canary to 100%
    needs: [vercel, smoke-tests, canary]
    runs-on: ubuntu-latest
    if: success()
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Promote to 100% traffic
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "üöÄ Promoting canary to 100% traffic..."

          # Promote to full traffic
          if [ "${{ secrets.VERCEL_EDGE_CONFIG_ID }}" != "" ]; then
            echo "Updating edge config for full traffic..."
            curl -X PATCH "https://api.vercel.com/v1/edge-config/${{ secrets.VERCEL_EDGE_CONFIG_ID }}/items" \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                "items": [
                  {
                    "operation": "update",
                    "key": "canary_percentage",
                    "value": 100
                  },
                  {
                    "operation": "update",
                    "key": "canary_enabled",
                    "value": false
                  }
                ]
              }'
          else
            echo "Promoting deployment to production domain..."
            vercel --token "$VERCEL_TOKEN" promote "${{ needs.vercel.outputs.deployment-url }}" --scope "$VERCEL_ORG_ID"
          fi

          echo "‚úÖ Promoted to 100% traffic"

      - name: Final smoke tests
        run: |
          echo "üß™ Running final smoke tests on 100% traffic..."

          # Wait for DNS propagation
          sleep 30

          APP_URL=https://arizu.com ./scripts/smoke-app.sh

          if [ "${{ secrets.N8N_URL }}" != "" ]; then
            N8N_URL=${{ secrets.N8N_URL }} ./scripts/smoke-n8n.sh
          fi

      - name: Notify promotion success
        uses: 8398a7/action-slack@v3
        if: env.SLACK_WEBHOOK_URL != ''
        with:
          status: success
          channel: '#deployments'
          username: 'GitHub Actions'
          text: |
            ‚úÖ Deployment promoted to 100% traffic!
            Deployment: ${{ github.sha }}
            Author: ${{ github.actor }}
            All smoke tests passed
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  rollback:
    name: Rollback Canary
    needs: [vercel, canary]
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Rollback deployment
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "üîÑ Rolling back canary deployment..."

          # Disable canary routing
          if [ "${{ secrets.VERCEL_EDGE_CONFIG_ID }}" != "" ]; then
            curl -X PATCH "https://api.vercel.com/v1/edge-config/${{ secrets.VERCEL_EDGE_CONFIG_ID }}/items" \
              -H "Authorization: Bearer $VERCEL_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{
                "items": [
                  {
                    "operation": "update",
                    "key": "canary_enabled",
                    "value": false
                  },
                  {
                    "operation": "update",
                    "key": "canary_percentage",
                    "value": 0
                  }
                ]
              }'
          fi

          echo "‚úÖ Canary deployment rolled back"

      - name: Notify rollback
        uses: 8398a7/action-slack@v3
        if: env.SLACK_WEBHOOK_URL != ''
        with:
          status: failure
          channel: '#deployments'
          username: 'GitHub Actions'
          text: |
            üö® Canary deployment rolled back!
            Failed deployment: ${{ github.sha }}
            Author: ${{ github.actor }}
            Check logs for details
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [vercel, smoke-tests, canary, promote]
    if: always()

    steps:
      - name: Notify final deployment status
        uses: 8398a7/action-slack@v3
        if: env.SLACK_WEBHOOK_URL != ''
        with:
          status: ${{ needs.promote.result || needs.canary.result || needs.vercel.result }}
          channel: '#deployments'
          username: 'GitHub Actions'
          text: |
            üèÅ Deployment workflow completed!
            Status: ${{ needs.promote.result || needs.canary.result || needs.vercel.result }}
            Commit: ${{ github.event.head_commit.message }}
            Author: ${{ github.actor }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}